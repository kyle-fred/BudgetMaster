-- Create Budget Table
CREATE TABLE public.BUDGETS (
    ID BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    TOTAL_INCOME NUMERIC(19, 2) NOT NULL DEFAULT 0,
    TOTAL_EXPENSE NUMERIC(19, 2) NOT NULL DEFAULT 0,
    SAVINGS NUMERIC(19, 2) NOT NULL DEFAULT 0,
    CURRENCY VARCHAR(3) NOT NULL DEFAULT 'GBP',
    MONTH VARCHAR(255) NOT NULL UNIQUE,
    CREATED_AT TIMESTAMP NOT NULL DEFAULT NOW(),
    LAST_UPDATED_AT TIMESTAMP NOT NULL DEFAULT NOW()
);
CREATE INDEX idx_budget_month ON public.BUDGETS (MONTH);

-- Create Income Table
CREATE TABLE public.INCOMES (
    ID BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    NAME VARCHAR(255) NOT NULL,
    SOURCE VARCHAR(255) NOT NULL,
    AMOUNT NUMERIC(19, 2) NOT NULL,
    CURRENCY VARCHAR(3) NOT NULL DEFAULT 'GBP',
    MONTH VARCHAR(255) NOT NULL,
    TYPE VARCHAR(255) NOT NULL,
    CREATED_AT TIMESTAMP NOT NULL DEFAULT NOW(),
    LAST_UPDATED_AT TIMESTAMP NOT NULL DEFAULT NOW()
);

-- Create Expense Table
CREATE TABLE public.EXPENSES (
    ID BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    NAME VARCHAR(255) NOT NULL,
    CATEGORY VARCHAR(255) NOT NULL,
    AMOUNT NUMERIC(19, 2) NOT NULL,
    CURRENCY VARCHAR(3) NOT NULL DEFAULT 'GBP',
    MONTH VARCHAR(255) NOT NULL,
    TYPE VARCHAR(255) NOT NULL,
    CREATED_AT TIMESTAMP NOT NULL DEFAULT NOW(),
    LAST_UPDATED_AT TIMESTAMP NOT NULL DEFAULT NOW()
);

-- Create function to update last_updated_at timestamp
CREATE OR REPLACE FUNCTION update_last_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.LAST_UPDATED_AT = NOW();
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- Create triggers for each table to update last_updated_at before update
CREATE TRIGGER set_last_updated_at_on_budget
BEFORE UPDATE ON BUDGETS
FOR EACH ROW
EXECUTE FUNCTION update_last_updated_at_column();

CREATE TRIGGER set_last_updated_at_on_income
BEFORE UPDATE ON INCOMES
FOR EACH ROW
EXECUTE FUNCTION update_last_updated_at_column();

CREATE TRIGGER set_last_updated_at_on_expense
BEFORE UPDATE ON EXPENSES
FOR EACH ROW
EXECUTE FUNCTION update_last_updated_at_column();